"use strict";
var ContentTypes;
(function (ContentTypes) {
    ContentTypes["JSON"] = "application/json";
    ContentTypes["JSON_WITH_CHARSET"] = "application/json; charset=utf-8";
    ContentTypes["MULTIPART_FORM_DATA"] = "multipart/form-data";
})(ContentTypes || (ContentTypes = {}));
var Headers;
(function (Headers) {
    Headers["ACCEPT"] = "accept";
    Headers["CONTENT_TYPE"] = "content-type";
    Headers["CONTENT_LENGTH"] = "content-length";
    Headers["AUTHORIZATION"] = "authorization";
})(Headers || (Headers = {}));
var HttpMethod;
(function (HttpMethod) {
    HttpMethod["POST"] = "POST";
    HttpMethod["PUT"] = "PUT";
    HttpMethod["DELETE"] = "DELETE";
    HttpMethod["GET"] = "GET";
})(HttpMethod || (HttpMethod = {}));
var StatusCode;
(function (StatusCode) {
    StatusCode[StatusCode["MOVED_PERMANENTLY"] = 301] = "MOVED_PERMANENTLY";
    StatusCode[StatusCode["MOVED_TEMPORARILY"] = 302] = "MOVED_TEMPORARILY";
    StatusCode[StatusCode["SEE_OTHER"] = 303] = "SEE_OTHER";
    StatusCode[StatusCode["NOT_MODIFIED"] = 304] = "NOT_MODIFIED";
    StatusCode[StatusCode["TEMPORARY_REDIRECT"] = 307] = "TEMPORARY_REDIRECT";
})(StatusCode || (StatusCode = {}));
const Http = {
    Method: HttpMethod,
    StatusCode: StatusCode,
    isRedirect(statusCode) {
        return [
            Http.StatusCode.MOVED_PERMANENTLY,
            Http.StatusCode.MOVED_TEMPORARILY,
            Http.StatusCode.SEE_OTHER,
            Http.StatusCode.NOT_MODIFIED
        ].indexOf(statusCode) > -1;
    },
    needsContentLengthHeader(requestMethod) {
        return [
            Http.Method.POST,
            Http.Method.PUT,
            Http.Method.DELETE
        ].indexOf(requestMethod) > -1;
    },
    Headers: Headers,
    ContentTypes: ContentTypes
};
module.exports = Http;
